{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///./bigquery_query.ts","webpack:///./config_ctrl.ts","webpack:///./datasource.ts","webpack:///./meta_query.ts","webpack:///./module.ts","webpack:///./query_ctrl.ts","webpack:///./response_parser.ts","webpack:///./sql_part.ts","webpack:///external \"app/core/app_events\"","webpack:///external \"app/plugins/sdk\"","webpack:///external \"lodash\""],"names":[],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./module.ts\");\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import _ from 'lodash';\n\nexport default class BigQueryQuery {\n    target: any;\n    templateSrv: any;\n    scopedVars: any;\n\n    /** @ngInject */\n    constructor(target, templateSrv?, scopedVars?) {\n        this.target = target;\n        this.templateSrv = templateSrv;\n        this.scopedVars = scopedVars;\n\n        target.format = target.format || 'time_series';\n        target.timeColumn = target.timeColumn || 'time';\n        target.metricColumn = target.metricColumn || 'none';\n\n        target.group = target.group || [];\n        target.where = target.where || [{type: 'macro', name: '$__timeFilter', params: []}];\n        target.select = target.select || [[{type: 'column', params: ['value']}]];\n\n        // handle pre query gui panels gracefully\n        if (!('rawQuery' in this.target)) {\n            if ('rawSql' in target) {\n                // pre query gui panel\n                target.rawQuery = true;\n            } else {\n                // new panel\n                target.rawQuery = false;\n            }\n        }\n\n        // give interpolateQueryStr access to this\n        this.interpolateQueryStr = this.interpolateQueryStr.bind(this);\n    }\n\n    // remove identifier quoting from identifier to use in metadata queries\n    unquoteIdentifier(value) {\n        if (value[0] === '\"' && value[value.length - 1] === '\"') {\n            return value.substring(1, value.length - 1).replace(/\"\"/g, '\"');\n        } else {\n            return value;\n        }\n    }\n\n    quoteIdentifier(value) {\n        return '\"' + String(value).replace(/\"/g, '\"\"') + '\"';\n    }\n\n    quoteLiteral(value) {\n        return \"'\" + String(value).replace(/'/g, \"''\") + \"'\";\n    }\n\n    escapeLiteral(value) {\n        return String(value).replace(/'/g, \"''\");\n    }\n\n    hasTimeGroup() {\n        return _.find(this.target.group, (g: any) => g.type === 'time');\n    }\n\n    hasMetricColumn() {\n        return this.target.metricColumn !== 'none';\n    }\n\n    interpolateQueryStr(value, variable, defaultFormatFn) {\n        // if no multi or include all do not regexEscape\n        if (!variable.multi && !variable.includeAll) {\n            return this.escapeLiteral(value);\n        }\n\n        if (typeof value === 'string') {\n            return this.quoteLiteral(value);\n        }\n\n        const escapedValues = _.map(value, this.quoteLiteral);\n        return escapedValues.join(',');\n    }\n\n    render(interpolate?) {\n        const target = this.target;\n\n        // new query with no table set yet\n        if (!this.target.rawQuery && !('table' in this.target)) {\n            return '';\n        }\n\n        if (!target.rawQuery) {\n            target.rawSql = this.buildQuery();\n        }\n        if (interpolate) {\n            return this.templateSrv.replace(target.rawSql, this.scopedVars, this.interpolateQueryStr);\n        } else {\n            return target.rawSql;\n        }\n    }\n\n    hasUnixEpochTimecolumn() {\n        return ['int4', 'int8', 'float4', 'float8', 'numeric'].indexOf(this.target.timeColumnType) > -1;\n    }\n\n    buildTimeColumn(alias = true) {\n        const timeGroup = this.hasTimeGroup();\n        let query;\n        let macro = '$__timeGroup';\n\n        if (timeGroup) {\n            let args;\n            if (timeGroup.params.length > 1 && timeGroup.params[1] !== 'none') {\n                args = timeGroup.params.join(',');\n            } else {\n                args = timeGroup.params[0];\n            }\n            if (this.hasUnixEpochTimecolumn()) {\n                macro = '$__unixEpochGroup';\n            }\n            if (alias) {\n                macro += 'Alias';\n            }\n            query = macro + '(' + this.target.timeColumn + ',' + args + ')';\n        } else {\n            query = this.target.timeColumn;\n            if (alias) {\n                query += ' AS time';\n            }\n        }\n\n        return query;\n    }\n\n    buildMetricColumn() {\n        if (this.hasMetricColumn()) {\n            return this.target.metricColumn + ' AS metric';\n        }\n\n        return '';\n    }\n\n    buildValueColumns() {\n        let query = '';\n        for (const column of this.target.select) {\n            query += ',\\n  ' + this.buildValueColumn(column);\n        }\n\n        return query;\n    }\n\n    buildValueColumn(column) {\n        let query = '';\n\n        const columnName = _.find(column, (g: any) => g.type === 'column');\n        query = columnName.params[0];\n\n        const aggregate = _.find(column, (g: any) => g.type === 'aggregate' || g.type === 'percentile');\n        const windows = _.find(column, (g: any) => g.type === 'window' || g.type === 'moving_window');\n\n        if (aggregate) {\n            const func = aggregate.params[0];\n            switch (aggregate.type) {\n                case 'aggregate':\n                    if (func === 'first' || func === 'last') {\n                        query = func + '(' + query + ',' + this.target.timeColumn + ')';\n                    } else {\n                        query = func + '(' + query + ')';\n                    }\n                    break;\n                case 'percentile':\n                    query = func + '(' + aggregate.params[1] + ') WITHIN GROUP (ORDER BY ' + query + ')';\n                    break;\n            }\n        }\n\n        if (windows) {\n            const overParts = [];\n            if (this.hasMetricColumn()) {\n                overParts.push('PARTITION BY ' + this.target.metricColumn);\n            }\n            overParts.push('ORDER BY ' + this.buildTimeColumn(false));\n\n            const over = overParts.join(' ');\n            let curr: string;\n            let prev: string;\n            switch (windows.type) {\n                case 'window':\n                    switch (windows.params[0]) {\n                        case 'delta':\n                            curr = query;\n                            prev = 'lag(' + curr + ') OVER (' + over + ')';\n                            query = curr + ' - ' + prev;\n                            break;\n                        case 'increase':\n                            curr = query;\n                            prev = 'lag(' + curr + ') OVER (' + over + ')';\n                            query = '(CASE WHEN ' + curr + ' >= ' + prev + ' THEN ' + curr + ' - ' + prev;\n                            query += ' WHEN ' + prev + ' IS NULL THEN NULL ELSE ' + curr + ' END)';\n                            break;\n                        case 'rate':\n                            let timeColumn = this.target.timeColumn;\n                            if (aggregate) {\n                                timeColumn = 'min(' + timeColumn + ')';\n                            }\n\n                            curr = query;\n                            prev = 'lag(' + curr + ') OVER (' + over + ')';\n                            query = '(CASE WHEN ' + curr + ' >= ' + prev + ' THEN ' + curr + ' - ' + prev;\n                            query += ' WHEN ' + prev + ' IS NULL THEN NULL ELSE ' + curr + ' END)';\n                            query += '/extract(epoch from ' + timeColumn + ' - lag(' + timeColumn + ') OVER (' + over + '))';\n                            break;\n                        default:\n                            query = windows.params[0] + '(' + query + ') OVER (' + over + ')';\n                            break;\n                    }\n                    break;\n                case 'moving_window':\n                    query = windows.params[0] + '(' + query + ') OVER (' + over + ' ROWS ' + windows.params[1] + ' PRECEDING)';\n                    break;\n            }\n        }\n\n        const alias = _.find(column, (g: any) => g.type === 'alias');\n        if (alias) {\n            query += ' AS ' + this.quoteIdentifier(alias.params[0]);\n        }\n\n        return query;\n    }\n\n    buildWhereClause() {\n        let query = '';\n        const conditions = _.map(this.target.where, (tag, index) => {\n            switch (tag.type) {\n                case 'macro':\n                    return tag.name + '(' + this.target.timeColumn + ')';\n                    break;\n                case 'expression':\n                    return tag.params.join(' ');\n                    break;\n            }\n        });\n\n        if (conditions.length > 0) {\n            query = '\\nWHERE\\n  ' + conditions.join(' AND\\n  ');\n        }\n\n        return query;\n    }\n\n    buildGroupClause() {\n        let query = '';\n        let groupSection = '';\n\n        for (let i = 0; i < this.target.group.length; i++) {\n            const part = this.target.group[i];\n            if (i > 0) {\n                groupSection += ', ';\n            }\n            if (part.type === 'time') {\n                groupSection += '1';\n            } else {\n                groupSection += part.params[0];\n            }\n        }\n\n        if (groupSection.length) {\n            query = '\\nGROUP BY ' + groupSection;\n            if (this.hasMetricColumn()) {\n                query += ',2';\n            }\n        }\n        return query;\n    }\n\n    buildQuery() {\n        let query = '#standardSQL';\n        query += '\\n  ' + 'SELECT';\n        query += '\\n  ' + this.buildTimeColumn();\n        if (this.hasMetricColumn()) {\n            query += ',\\n  ' + this.buildMetricColumn();\n        }\n        query += this.buildValueColumns();\n\n        query += '\\nFROM ' + this.target.dataset + \".\" + this.target.table ;\n\n        query += this.buildWhereClause();\n        query += this.buildGroupClause();\n\n        query += '\\nORDER BY 1';\n        if (this.hasMetricColumn()) {\n            query += ',2';\n        }\n       query += '\\nLIMIT 10שפן צשס מוצנקר םכ רקדוךאד' +\n           '00';\n        console.log(query)\n        return query;\n    }\n\n    expend_macros(options) {\n        if (this.target.rawSql) {\n            let q = this.replaceTimeFilters(options);\n            return q;\n        }\n    }\n\n    replaceTimeFilters(options) {\n            const from = \"TIMESTAMP_MILLIS (\" + options.range.from.valueOf().toString() + \")\";\n            const to = \"TIMESTAMP_MILLIS (\" + options.range.to.valueOf().toString() + \")\";\n            const range = this.target.timeColumn + ' BETWEEN ' + from + ' AND ' + to;\n            return this.target.rawSql.replace(/\\$__timeFilter\\(([\\w_]+)\\)/g, range);\n    }\n\n}\n","\nexport class BigQueryConfigCtrl {\n  static templateUrl = 'partials/config.html';\n  datasourceSrv: any;\n  current: any;\n  jsonText: string;\n  validationErrors: string[] = [];\n  inputDataValid: boolean;\n  authenticationTypes: any[];\n  defaultAuthenticationType: string;\n\n  /** @ngInject */\n  constructor(datasourceSrv) {\n    this.defaultAuthenticationType = 'jwt';\n    this.datasourceSrv = datasourceSrv;\n    this.current.jsonData = this.current.jsonData || {};\n    this.current.jsonData.authenticationType = this.current.jsonData.authenticationType\n        ? this.current.jsonData.authenticationType\n        : this.defaultAuthenticationType;\n    this.current.secureJsonData = this.current.secureJsonData || {};\n    this.current.secureJsonFields = this.current.secureJsonFields || {};\n    this.authenticationTypes = [\n      { key: this.defaultAuthenticationType, value: 'Google JWT File' },\n      { key: 'gce', value: 'GCE Default Service Account' },\n    ];\n  }\n\n  save(jwt) {\n    this.current.secureJsonData.privateKey = jwt.private_key;\n    this.current.jsonData.tokenUri = jwt.token_uri;\n    this.current.jsonData.clientEmail = jwt.client_email;\n    this.current.jsonData.defaultProject = jwt.project_id;\n  }\n\n  validateJwt(jwt) {\n    this.resetValidationMessages();\n    if (!jwt.private_key || jwt.private_key.length === 0) {\n      this.validationErrors.push('Private key field missing in JWT file.');\n    }\n\n    if (!jwt.token_uri || jwt.token_uri.length === 0) {\n      this.validationErrors.push('Token URI field missing in JWT file.');\n    }\n\n    if (!jwt.client_email || jwt.client_email.length === 0) {\n      this.validationErrors.push('Client Email field missing in JWT file.');\n    }\n\n    if (!jwt.project_id || jwt.project_id.length === 0) {\n      this.validationErrors.push('Project Id field missing in JWT file.');\n    }\n\n    if (this.validationErrors.length === 0) {\n      this.inputDataValid = true;\n      return true;\n    }\n\n    return false;\n  }\n\n  onUpload(json) {\n    this.jsonText = '';\n    if (this.validateJwt(json)) {\n      this.save(json);\n    }\n  }\n\n  onPasteJwt(e) {\n    try {\n      const json = JSON.parse(e.originalEvent.clipboardData.getData('text/plain') || this.jsonText);\n      if (this.validateJwt(json)) {\n        this.save(json);\n      }\n    } catch (error) {\n      this.resetValidationMessages();\n      this.validationErrors.push(`Invalid json: ${error.message}`);\n    }\n  }\n\n  resetValidationMessages() {\n    this.validationErrors = [];\n    this.inputDataValid = false;\n    this.jsonText = '';\n\n    this.current.jsonData = Object.assign({}, { authenticationType: this.current.jsonData.authenticationType });\n    this.current.secureJsonData = {};\n    this.current.secureJsonFields = {};\n  }\n}\n","import _ from 'lodash';\nimport ResponseParser from './response_parser';\nimport BigQueryQuery from './bigquery_query';\nimport {ResultFormat} from \"../V1/response_parser\";\n\nexport class BigQueryDatasource {\n    id: any;\n    name: any;\n    jsonData: any;\n    responseParser: ResponseParser;\n    queryModel: BigQueryQuery;\n    interval: string;\n    baseUrl: string;\n    url: string;\n    authenticationType: string;\n    projectName: string;\n\n    /** @ngInject */\n    constructor(instanceSettings, private backendSrv, private $q, private templateSrv, private timeSrv) {\n        this.name = instanceSettings.name;\n        this.id = instanceSettings.id;\n        this.jsonData = instanceSettings.jsonData;\n        this.responseParser = new ResponseParser(this.$q);\n        this.queryModel = new BigQueryQuery({});\n        this.baseUrl = `/bigquery/`;\n        this.url = instanceSettings.url;\n        this.interval = (instanceSettings.jsonData || {}).timeInterval || '1m';\n        this.authenticationType = instanceSettings.jsonData.authenticationType || 'jwt';\n        this.projectName = instanceSettings.jsonData.defaultProject || '';\n    }\n\n    async doRequest(url, maxRetries = 1) {\n        return this.backendSrv\n            .datasourceRequest({\n                url: this.url + url,\n                method: 'GET',\n            })\n            .catch(error => {\n                if (maxRetries > 0) {\n                    return this.doRequest(url, maxRetries - 1);\n                }\n                console.log(error);\n                throw error;\n            });\n    }\n\n    async doQueryRequest(url, query, maxRetries = 1) {\n        return this.backendSrv\n            .datasourceRequest({\n                url: this.url + url,\n                method: 'POST',\n                data: {\n                    query : query,\n                    useLegacySql: false,\n                },\n            })\n            .catch(error => {\n                if (maxRetries > 0) {\n                    return this.doQueryRequest(url,query, maxRetries - 1);\n                }\n                throw error;\n            });\n    }\n    interpolateVariable = (value, variable) => {\n        if (typeof value === 'string') {\n            if (variable.multi || variable.includeAll) {\n                return this.queryModel.quoteLiteral(value);\n            } else {\n                return value;\n            }\n        }\n\n        if (typeof value === 'number') {\n            return value;\n        }\n\n        const quotedValues = _.map(value, v => {\n            return this.queryModel.quoteLiteral(v);\n        });\n        return quotedValues.join(',');\n    };\n\n    query(options) {\n        const queries = _.filter(options.targets, target => {\n            return target.hide !== true;\n        }).map(target => {\n            const queryModel = new BigQueryQuery(target, this.templateSrv, options.scopedVars);\n            this.queryModel = queryModel\n            return {\n                refId: target.refId,\n                intervalMs: options.intervalMs,\n                maxDataPoints: options.maxDataPoints,\n                datasourceId: this.id,\n                rawSql: queryModel.render(this.interpolateVariable),\n                format: target.format,\n            };\n        });\n\n        if (queries.length === 0) {\n            return this.$q.when({data: []});\n        }\n        let q = this.queryModel.expend_macros(options);\n        const path = `v2/projects/${this.projectName}/queries`;\n        return this.doQueryRequest(`${this.baseUrl}${path}`,q).then(response => {\n            return new ResponseParser(this.$q).parseDataQuery(response);\n        });\n    }\n\n    annotationQuery(options) {\n        if (!options.annotation.rawQuery) {\n            return this.$q.reject({\n                message: 'Query missing in annotation definition',\n            });\n        }\n\n        const query = {\n            refId: options.annotation.name,\n            datasourceId: this.id,\n            rawSql: this.templateSrv.replace(options.annotation.rawQuery, options.scopedVars, this.interpolateVariable),\n            format: 'table',\n        };\n        return this.backendSrv\n            .datasourceRequest({\n                url: '/api/tsdb/query',\n                method: 'POST',\n                data: {\n                    from: options.range.from.valueOf().toString(),\n                    to: options.range.to.valueOf().toString(),\n                    queries: [query],\n                },\n            })\n            .then(data => this.responseParser.transformAnnotationResponse(options, data));\n    }\n\n    getProjects(): Promise<ResultFormat[]> {\n        const path = `v2/projects`;\n        return this.doRequest(`${this.baseUrl}${path}`).then(response => {\n            return new ResponseParser(this.$q).parseProjects(response);\n        });\n    }\n\n    getDatasets(projectName): Promise<ResultFormat[]> {\n        const path = `v2/projects/${projectName}/datasets`;\n        return this.doRequest(`${this.baseUrl}${path}`).then(response => {\n            return new ResponseParser(this.$q).parseDatasets(response);\n        });\n    }\n\n    getTables(projectName, datasetName): Promise<ResultFormat[]> {\n        const path = `v2/projects/${projectName}/datasets/${datasetName}/tables`;\n        return this.doRequest(`${this.baseUrl}${path}`).then(response => {\n            return new ResponseParser(this.$q).parseTabels(response);\n        });\n    }\n\n    getTableFields(projectName, datasetName, tableName, filter): Promise<ResultFormat[]> {\n        const path = `v2/projects/${projectName}/datasets/${datasetName}/tables/${tableName}`;\n        return this.doRequest(`${this.baseUrl}${path}`).then(response => {\n            return new ResponseParser(this.$q).parseTabelFields(response, filter);\n        });\n    }\n\n    metricFindQuery(query, optionalOptions) {\n        let refId = 'tempvar';\n        if (optionalOptions && optionalOptions.variable && optionalOptions.variable.name) {\n            refId = optionalOptions.variable.name;\n        }\n\n        const interpolatedQuery = {\n            refId: refId,\n            datasourceId: this.id,\n            rawSql: this.templateSrv.replace(query, {}, this.interpolateVariable),\n            format: 'table',\n        };\n\n        const range = this.timeSrv.timeRange();\n        const data = {\n            queries: [interpolatedQuery],\n            from: range.from.valueOf().toString(),\n            to: range.to.valueOf().toString(),\n        };\n        return this.backendSrv\n            .datasourceRequest({\n                url: '/api/tsdb/query',\n                method: 'POST',\n                data: data,\n            })\n            .then(data => this.responseParser.parseMetricFindQueryResult(refId, data));\n    }\n\n\n    async getDefaultProject() {\n        try {\n            if (this.authenticationType === 'gce' || !this.projectName) {\n                const {data} = await this.backendSrv.datasourceRequest({\n                    url: '/api/tsdb/query',\n                    method: 'POST',\n                    data: {\n                        queries: [\n                            {\n                                refId: 'ensureDefaultProjectQuery',\n                                type: 'ensureDefaultProjectQuery',\n                                datasourceId: this.id,\n                            },\n                        ],\n                    },\n                });\n                this.projectName = data.results.ensureDefaultProjectQuery.meta.defaultProject;\n                return this.projectName;\n            } else {\n                return this.projectName;\n            }\n        } catch (error) {\n            throw BigQueryDatasource.formatBigqueryError(error);\n        }\n    }\n\n    async testDatasource() {\n        let status, message;\n        const defaultErrorMessage = 'Cannot connect to BigQuery API';\n        try {\n            const projectName = await this.getDefaultProject();\n            const path = `v2/projects/${projectName}/datasets`;\n            const response = await this.doRequest(`${this.baseUrl}${path}`);\n            if (response.status === 200) {\n                status = 'success';\n                message = 'Successfully queried the BigQuery API.';\n            } else {\n                status = 'error';\n                message = response.statusText ? response.statusText : defaultErrorMessage;\n            }\n        } catch (error) {\n            console.log(error);\n            status = 'error';\n            if (_.isString(error)) {\n                message = error;\n            } else {\n                message = 'BigQuery: ';\n                message += error.statusText ? error.statusText : defaultErrorMessage;\n                if (error.data && error.data.error && error.data.error.code) {\n                    message += ': ' + error.data.error.code + '. ' + error.data.error.message;\n                }\n            }\n        } finally {\n            return {\n                status,\n                message,\n            };\n        }\n    }\n\n    static formatBigqueryError(error) {\n        let message = 'BigQuery: ';\n        message += error.statusText ? error.statusText + ': ' : '';\n        if (error.data && error.data.error) {\n            try {\n                const res = JSON.parse(error.data.error);\n                message += res.error.code + '. ' + res.error.message;\n            } catch (err) {\n                message += error.data.error;\n            }\n        } else {\n            message += 'Cannot connect to BigQuery API';\n        }\n        return message;\n    }\n\n}\n","export class BigQueryMetaQuery {\n  constructor(private target, private queryModel) {}\n\n  getOperators(datatype: string) {\n    switch (datatype) {\n      case 'float4':\n      case 'float8': {\n        return ['=', '!=', '<', '<=', '>', '>='];\n      }\n      case 'text':\n      case 'varchar':\n      case 'char': {\n        return ['=', '!=', '<', '<=', '>', '>=', 'IN', 'NOT IN', 'LIKE', 'NOT LIKE', '~', '~*', '!~', '!~*'];\n      }\n      default: {\n        return ['=', '!=', '<', '<=', '>', '>=', 'IN', 'NOT IN'];\n      }\n    }\n  }\n\n  // quote identifier as literal to use in metadata queries\n  quoteIdentAsLiteral(value) {\n    return this.queryModel.quoteLiteral(this.queryModel.unquoteIdentifier(value));\n  }\n\n\n  buildSchemaConstraint() {\n    const query = `\ntable_schema IN (\n  SELECT\n    CASE WHEN trim(s[i]) = '\"$user\"' THEN user ELSE trim(s[i]) END\n  FROM\n    generate_series(\n      array_lower(string_to_array(current_setting('search_path'),','),1),\n      array_upper(string_to_array(current_setting('search_path'),','),1)\n    ) as i,\n    string_to_array(current_setting('search_path'),',') s\n)`;\n    return query;\n  }\n\n  buildTableConstraint(table: string) {\n    let query = '';\n\n    // check for schema qualified table\n    if (table.includes('.')) {\n      const parts = table.split('.');\n      query = 'table_schema = ' + this.quoteIdentAsLiteral(parts[0]);\n      query += ' AND table_name = ' + this.quoteIdentAsLiteral(parts[1]);\n      return query;\n    } else {\n      query = this.buildSchemaConstraint();\n      query += ' AND table_name = ' + this.quoteIdentAsLiteral(table);\n\n      return query;\n    }\n  }\n\n  buildTableQuery() {\n    let query = 'SELECT quote_ident(table_name) FROM information_schema.tables WHERE ';\n    query += this.buildSchemaConstraint();\n    query += ' ORDER BY table_name';\n    return query;\n  }\n\n  buildColumnQuery(type?: string) {\n    let query = 'SELECT quote_ident(column_name) FROM information_schema.columns WHERE ';\n    query += this.buildTableConstraint(this.target.table);\n\n    switch (type) {\n      case 'time': {\n        query +=\n          \" AND data_type IN ('timestamp without time zone','timestamp with time zone','bigint','integer','double precision','real')\";\n        break;\n      }\n      case 'metric': {\n        query += \" AND data_type IN ('text','character','character varying')\";\n        break;\n      }\n      case 'value': {\n        query += \" AND data_type IN ('bigint','integer','double precision','real')\";\n        query += ' AND column_name <> ' + this.quoteIdentAsLiteral(this.target.timeColumn);\n        break;\n      }\n      case 'group': {\n        query += \" AND data_type IN ('text','character','character varying')\";\n        break;\n      }\n    }\n\n    query += ' ORDER BY column_name';\n\n    return query;\n  }\n\n  buildValueQuery(column: string) {\n    console.log('buildValueQuery(column: string)')\n    let query = 'SELECT DISTINCT quote_literal(' + column + ')';\n    query += ' FROM ' + this.target.table;\n    query += ' WHERE $__timeFilter(' + this.target.timeColumn + ')';\n    query += ' AND ' + column + ' IS NOT NULL';\n    query += ' ORDER BY 1 LIMIT 100';\n    return query;\n  }\n\n  buildDatatypeQuery(column: string) {\n    console.log('buildDatatypeQuery(column: string)')\n    let query = 'SELECT udt_name FROM information_schema.columns WHERE ';\n    query += this.buildTableConstraint(this.target.table);\n    query += ' AND column_name = ' + this.quoteIdentAsLiteral(column);\n    return query;\n  }\n\n  buildAggregateQuery() {\n    let query = 'SELECT DISTINCT proname FROM pg_aggregate ';\n    query += 'INNER JOIN pg_proc ON pg_aggregate.aggfnoid = pg_proc.oid ';\n    query += 'INNER JOIN pg_type ON pg_type.oid=pg_proc.prorettype ';\n    query += \"WHERE pronargs=1 AND typname IN ('float8') AND aggkind='n' ORDER BY 1\";\n    return query;\n  }\n}\n","import { BigQueryDatasource } from './datasource';\nimport { BigQueryQueryCtrl } from './query_ctrl';\nimport { BigQueryConfigCtrl } from './config_ctrl';\n\nconst defaultQuery = `SELECT\n  extract(epoch from time_column) AS time,\n  text_column as text,\n  tags_column as tags\nFROM\n  metric_table\nWHERE\n  $__timeFilter(time_column)\n`;\n\nclass BigQueryAnnotationsQueryCtrl {\n  static templateUrl = 'partials/annotations.editor.html';\n\n  annotation: any;\n\n  /** @ngInject */\n  constructor() {\n    this.annotation.rawQuery = this.annotation.rawQuery || defaultQuery;\n  }\n}\n\nexport {\n  BigQueryDatasource,\n  BigQueryDatasource as Datasource,\n  BigQueryQueryCtrl as QueryCtrl,\n  BigQueryConfigCtrl as ConfigCtrl,\n  BigQueryAnnotationsQueryCtrl as AnnotationsQueryCtrl,\n};\n","import _ from 'lodash';\nimport appEvents from 'grafana/app/core/app_events';\nimport {BigQueryMetaQuery} from './meta_query';\nimport {QueryCtrl} from 'grafana/app/plugins/sdk';\nimport {SqlPart} from './sql_part';\nimport BigQueryQuery from './bigquery_query';\nimport sqlPart from './sql_part';\n\nexport interface QueryMeta {\n    sql: string;\n}\n\nconst defaultQuery = `SELECT\n  $__time(time_column),\n  value1\nFROM\n  metric_table\nWHERE\n  $__timeFilter(time_column)\n`;\n\nexport class BigQueryQueryCtrl extends QueryCtrl {\n    static templateUrl = 'partials/query.editor.html';\n\n    showLastQuerySQL: boolean;\n    formats: any[];\n    queryModel: BigQueryQuery;\n    metaBuilder: BigQueryMetaQuery;\n    lastQueryMeta: QueryMeta;\n    lastQueryError: string;\n    showHelp: boolean;\n    projectSegment: any;\n    datasetSegment: any;\n    tableSegment: any;\n    whereAdd: any;\n    timeColumnSegment: any;\n    metricColumnSegment: any;\n    selectMenu: any[];\n    selectParts: SqlPart[][];\n    groupParts: SqlPart[];\n    whereParts: SqlPart[];\n    groupAdd: any;\n\n    /** @ngInject */\n    constructor($scope, $injector, private templateSrv, private $q, private uiSegmentSrv) {\n        super($scope, $injector);\n        this.target = this.target;\n        this.queryModel = new BigQueryQuery(this.target, templateSrv, this.panel.scopedVars);\n        this.metaBuilder = new BigQueryMetaQuery(this.target, this.queryModel);\n        this.updateProjection();\n\n        this.formats = [{text: 'Time series', value: 'time_series'}, {text: 'Table', value: 'table'}];\n\n        if (!this.target.rawSql) {\n            // special handling when in table panel\n            if (this.panelCtrl.panel.type === 'table') {\n                this.target.format = 'table';\n                this.target.rawSql = 'SELECT 1';\n                this.target.rawQuery = true;\n            } else {\n                this.target.rawSql = defaultQuery;\n            }\n        }\n\n        if (!this.target.project) {\n            this.projectSegment = uiSegmentSrv.newSegment({value: 'select project', fake: true});\n        } else {\n            this.projectSegment = uiSegmentSrv.newSegment(this.target.project);\n        }\n\n        if (!this.target.dataset) {\n            this.datasetSegment = uiSegmentSrv.newSegment({value: 'select dataset', fake: true});\n        } else {\n            this.datasetSegment = uiSegmentSrv.newSegment(this.target.dataset);\n        }\n\n        if (!this.target.table) {\n            this.tableSegment = uiSegmentSrv.newSegment({value: 'select table', fake: true});\n        } else {\n            this.tableSegment = uiSegmentSrv.newSegment(this.target.table);\n        }\n\n        this.timeColumnSegment = uiSegmentSrv.newSegment(this.target.timeColumn);\n        this.metricColumnSegment = uiSegmentSrv.newSegment(this.target.metricColumn);\n\n        this.buildSelectMenu();\n        this.whereAdd = this.uiSegmentSrv.newPlusButton();\n        this.groupAdd = this.uiSegmentSrv.newPlusButton();\n\n        this.panelCtrl.events.on('data-received', this.onDataReceived.bind(this), $scope);\n        this.panelCtrl.events.on('data-error', this.onDataError.bind(this), $scope);\n    }\n\n    updateProjection() {\n        this.selectParts = _.map(this.target.select, (parts: any) => {\n            return _.map(parts, sqlPart.create).filter(n => n);\n        });\n        this.whereParts = _.map(this.target.where, sqlPart.create).filter(n => n);\n        this.groupParts = _.map(this.target.group, sqlPart.create).filter(n => n);\n    }\n\n    updatePersistedParts() {\n        this.target.select = _.map(this.selectParts, selectParts => {\n            return _.map(selectParts, (part: any) => {\n                return {type: part.def.type, datatype: part.datatype, params: part.params};\n            });\n        });\n        this.target.where = _.map(this.whereParts, (part: any) => {\n            return {type: part.def.type, datatype: part.datatype, name: part.name, params: part.params};\n        });\n        this.target.group = _.map(this.groupParts, (part: any) => {\n            return {type: part.def.type, datatype: part.datatype, params: part.params};\n        });\n    }\n\n    buildSelectMenu() {\n        this.selectMenu = [];\n        const aggregates = {\n            text: 'Aggregate Functions',\n            value: 'aggregate',\n            submenu: [\n                {text: 'Average', value: 'avg'},\n                {text: 'Count', value: 'count'},\n                {text: 'Maximum', value: 'max'},\n                {text: 'Minimum', value: 'min'},\n                {text: 'Sum', value: 'sum'},\n                {text: 'Standard deviation', value: 'stddev'},\n                {text: 'Variance', value: 'variance'},\n            ],\n        };\n\n        // first and last aggregate are timescaledb specific\n        if (this.datasource.jsonData.timescaledb === true) {\n            aggregates.submenu.push({text: 'First', value: 'first'});\n            aggregates.submenu.push({text: 'Last', value: 'last'});\n        }\n\n        this.selectMenu.push(aggregates);\n\n        // ordered set aggregates require postgres 9.4+\n        if (this.datasource.jsonData.postgresVersion >= 904) {\n            const aggregates2 = {\n                text: 'Ordered-Set Aggregate Functions',\n                value: 'percentile',\n                submenu: [\n                    {text: 'Percentile (continuous)', value: 'percentile_cont'},\n                    {text: 'Percentile (discrete)', value: 'percentile_disc'},\n                ],\n            };\n            this.selectMenu.push(aggregates2);\n        }\n\n        const windows = {\n            text: 'Window Functions',\n            value: 'window',\n            submenu: [\n                {text: 'Delta', value: 'delta'},\n                {text: 'Increase', value: 'increase'},\n                {text: 'Rate', value: 'rate'},\n                {text: 'Sum', value: 'sum'},\n                {text: 'Moving Average', value: 'avg', type: 'moving_window'},\n            ],\n        };\n        this.selectMenu.push(windows);\n\n        this.selectMenu.push({text: 'Alias', value: 'alias'});\n        this.selectMenu.push({text: 'Column', value: 'column'});\n    }\n\n    toggleEditorMode() {\n        if (this.target.rawQuery) {\n            appEvents.emit('confirm-modal', {\n                title: 'Warning',\n                text2: 'Switching to query builder may overwrite your raw SQL.',\n                icon: 'fa-exclamation',\n                yesText: 'Switch',\n                onConfirm: () => {\n                    this.target.rawQuery = !this.target.rawQuery;\n                },\n            });\n        } else {\n            this.target.rawQuery = !this.target.rawQuery;\n        }\n    }\n\n    resetPlusButton(button) {\n        const plusButton = this.uiSegmentSrv.newPlusButton();\n        button.html = plusButton.html;\n        button.value = plusButton.value;\n    }\n\n    getProjectSegments() {\n        return this.datasource.getProjects()\n            .then(this.uiSegmentSrv.transformToSegments(false))\n            .catch(this.handleQueryError.bind(this));\n    }\n\n    projectChanged() {\n        this.target.project = this.projectSegment.value;\n        this.datasource.projectName = this.projectSegment.value;\n\n    }\n\n    getDatasetSegments() {\n        return this.datasource.getDatasets(this.target.project)\n            .then(this.uiSegmentSrv.transformToSegments(false))\n            .catch(this.handleQueryError.bind(this));\n    }\n\n    datasetChanged() {\n        this.target.dataset = this.datasetSegment.value;\n    }\n\n    getTableSegments() {\n        return this.datasource.getTables(this.target.project, this.target.dataset)\n            .then(this.uiSegmentSrv.transformToSegments(false))\n            .catch(this.handleQueryError.bind(this));\n    }\n\n    tableChanged() {\n        this.target.table = this.tableSegment.value;\n        this.target.where = [];\n        this.target.group = [];\n        this.updateProjection();\n\n        const segment = this.uiSegmentSrv.newSegment('none');\n        this.metricColumnSegment.html = segment.html;\n        this.metricColumnSegment.value = segment.value;\n        this.target.metricColumn = 'none';\n\n        const task1 = this.getTimeColumnSegments().then(result => {\n            // check if time column is still valid\n            if (result.length > 0 && !_.find(result, (r: any) => r.text === this.target.timeColumn)) {\n                const segment = this.uiSegmentSrv.newSegment(result[0].text);\n                this.timeColumnSegment.html = segment.html;\n                this.timeColumnSegment.value = segment.value;\n            }\n            return this.timeColumnChanged(false);\n        });\n        const task2 = this.getValueColumnSegments().then(result => {\n            if (result.length > 0) {\n                this.target.select = [[{type: 'column', params: [result[0].text]}]];\n                this.updateProjection();\n            }\n        });\n\n        this.$q.all([task1, task2]).then(() => {\n            this.panelCtrl.refresh();\n        });\n    }\n\n    getTimeColumnSegments() {\n        return this.datasource.getTableFields(this.target.project, this.target.dataset, this.target.table,\n            ['DATE', 'TIMESTAMP', 'DATETIME'])\n            .then(this.uiSegmentSrv.transformToSegments(false))\n            .catch(this.handleQueryError.bind(this));\n    }\n\n    getValueColumnSegments() {\n        return this.datasource.getTableFields(this.target.project, this.target.dataset, this.target.table,\n            ['INT64', 'NUMERIC', 'FLOAT64', 'FLOAT', 'INT'])\n            .then(this.uiSegmentSrv.transformToSegments(false))\n            .catch(this.handleQueryError.bind(this));\n    }\n\n    timeColumnChanged(refresh?: boolean) {\n        this.target.timeColumn = this.timeColumnSegment.value;\n        let partModel;\n        partModel = sqlPart.create({type: 'macro', name: '$__timeFilter', params: []});\n\n        if (this.whereParts.length >= 1 && this.whereParts[0].def.type === 'macro') {\n            // replace current macro\n            this.whereParts[0] = partModel;\n        } else {\n            this.whereParts.splice(0, 0, partModel);\n        }\n        this.updatePersistedParts();\n        if (refresh !== false) {\n            this.panelCtrl.refresh();\n        }\n    }\n\n    getMetricColumnSegments() {\n        return this.datasource.getTableFields(this.target.project, this.target.dataset, this.target.table, ['STRING', 'BYTES'])\n            .then(this.uiSegmentSrv.transformToSegments(false))\n            .catch(this.handleQueryError.bind(this));\n    }\n\n    metricColumnChanged() {\n        this.target.metricColumn = this.metricColumnSegment.value;\n        this.panelCtrl.refresh();\n    }\n\n    onDataReceived(dataList) {\n        //TODO fixme\n        /*this.lastQueryMeta = null;\n        this.lastQueryError = null;\n\n        const anySeriesFromQuery = _.find(dataList, { refId: this.target.refId });\n        if (anySeriesFromQuery) {\n          this.lastQueryMeta = anySeriesFromQuery.meta;\n        }*/\n    }\n\n    onDataError(err) {\n        if (err.data && err.data.results) {\n            const queryRes = err.data.results[this.target.refId];\n            if (queryRes) {\n                this.lastQueryMeta = queryRes.meta;\n                this.lastQueryError = queryRes.error;\n            }\n        }\n    }\n\n    transformToSegments(config) {\n        return results => {\n            const segments = _.map(results, segment => {\n                return this.uiSegmentSrv.newSegment({\n                    value: segment.text,\n                    expandable: segment.expandable,\n                });\n            });\n\n            if (config.addTemplateVars) {\n                for (const variable of this.templateSrv.variables) {\n                    let value;\n                    value = '$' + variable.name;\n                    if (config.templateQuoter && variable.multi === false) {\n                        value = config.templateQuoter(value);\n                    }\n\n                    segments.unshift(\n                        this.uiSegmentSrv.newSegment({\n                            type: 'template',\n                            value: value,\n                            expandable: true,\n                        })\n                    );\n                }\n            }\n\n            if (config.addNone) {\n                segments.unshift(this.uiSegmentSrv.newSegment({type: 'template', value: 'none', expandable: true}));\n            }\n\n            return segments;\n        };\n    }\n\n    findAggregateIndex(selectParts) {\n        return _.findIndex(selectParts, (p: any) => p.def.type === 'aggregate' || p.def.type === 'percentile');\n    }\n\n    findWindowIndex(selectParts) {\n        return _.findIndex(selectParts, (p: any) => p.def.type === 'window' || p.def.type === 'moving_window');\n    }\n\n    addSelectPart(selectParts, item, subItem) {\n        let partType = item.value;\n        if (subItem && subItem.type) {\n            partType = subItem.type;\n        }\n        let partModel = sqlPart.create({type: partType});\n        if (subItem) {\n            partModel.params[0] = subItem.value;\n        }\n        let addAlias = false;\n\n        switch (partType) {\n            case 'column':\n                const parts = _.map(selectParts, (part: any) => {\n                    return sqlPart.create({type: part.def.type, params: _.clone(part.params)});\n                });\n                this.selectParts.push(parts);\n                break;\n            case 'percentile':\n            case 'aggregate':\n                // add group by if no group by yet\n                if (this.target.group.length === 0) {\n                    this.addGroup('time', '$__interval');\n                }\n                const aggIndex = this.findAggregateIndex(selectParts);\n                if (aggIndex !== -1) {\n                    // replace current aggregation\n                    selectParts[aggIndex] = partModel;\n                } else {\n                    selectParts.splice(1, 0, partModel);\n                }\n                if (!_.find(selectParts, (p: any) => p.def.type === 'alias')) {\n                    addAlias = true;\n                }\n                break;\n            case 'moving_window':\n            case 'window':\n                const windowIndex = this.findWindowIndex(selectParts);\n                if (windowIndex !== -1) {\n                    // replace current window function\n                    selectParts[windowIndex] = partModel;\n                } else {\n                    const aggIndex = this.findAggregateIndex(selectParts);\n                    if (aggIndex !== -1) {\n                        selectParts.splice(aggIndex + 1, 0, partModel);\n                    } else {\n                        selectParts.splice(1, 0, partModel);\n                    }\n                }\n                if (!_.find(selectParts, (p: any) => p.def.type === 'alias')) {\n                    addAlias = true;\n                }\n                break;\n            case 'alias':\n                addAlias = true;\n                break;\n        }\n\n        if (addAlias) {\n            // set initial alias name to column name\n            partModel = sqlPart.create({type: 'alias', params: [selectParts[0].params[0].replace(/\"/g, '')]});\n            if (selectParts[selectParts.length - 1].def.type === 'alias') {\n                selectParts[selectParts.length - 1] = partModel;\n            } else {\n                selectParts.push(partModel);\n            }\n        }\n\n        this.updatePersistedParts();\n        this.panelCtrl.refresh();\n    }\n\n    removeSelectPart(selectParts, part) {\n        if (part.def.type === 'column') {\n            // remove all parts of column unless its last column\n            if (this.selectParts.length > 1) {\n                const modelsIndex = _.indexOf(this.selectParts, selectParts);\n                this.selectParts.splice(modelsIndex, 1);\n            }\n        } else {\n            const partIndex = _.indexOf(selectParts, part);\n            selectParts.splice(partIndex, 1);\n        }\n\n        this.updatePersistedParts();\n    }\n\n    handleSelectPartEvent(selectParts, part, evt) {\n        switch (evt.name) {\n            case 'get-param-options': {\n                switch (part.def.type) {\n                    case 'aggregate':\n                        return this.datasource\n                            .metricFindQuery(this.metaBuilder.buildAggregateQuery())\n                            .then(this.transformToSegments({}))\n                            .catch(this.handleQueryError.bind(this));\n                    case 'column':\n                        return this.datasource.getTableFields(this.target.project, this.target.dataset, this.target.table,\n                            ['INT64', 'NUMERIC', 'FLOAT64'])\n                            .then(this.uiSegmentSrv.transformToSegments(false))\n                            .catch(this.handleQueryError.bind(this));\n                }\n            }\n            case 'part-param-changed': {\n                this.updatePersistedParts();\n                this.panelCtrl.refresh();\n                break;\n            }\n            case 'action': {\n                this.removeSelectPart(selectParts, part);\n                this.panelCtrl.refresh();\n                break;\n            }\n            case 'get-part-actions': {\n                return this.$q.when([{text: 'Remove', value: 'remove-part'}]);\n            }\n        }\n    }\n\n    handleGroupPartEvent(part, index, evt) {\n        switch (evt.name) {\n            case 'get-param-options': {\n                return this.datasource\n                    .metricFindQuery(this.metaBuilder.buildColumnQuery())\n                    .then(this.transformToSegments({}))\n                    .catch(this.handleQueryError.bind(this));\n            }\n            case 'part-param-changed': {\n                this.updatePersistedParts();\n                this.panelCtrl.refresh();\n                break;\n            }\n            case 'action': {\n                this.removeGroup(part, index);\n                this.panelCtrl.refresh();\n                break;\n            }\n            case 'get-part-actions': {\n                return this.$q.when([{text: 'Remove', value: 'remove-part'}]);\n            }\n        }\n    }\n\n    addGroup(partType, value) {\n        let params = [value];\n        if (partType === 'time') {\n            params = ['$__interval', 'none'];\n        }\n        const partModel = sqlPart.create({type: partType, params: params});\n\n        if (partType === 'time') {\n            // put timeGroup at start\n            this.groupParts.splice(0, 0, partModel);\n        } else {\n            this.groupParts.push(partModel);\n        }\n\n        // add aggregates when adding group by\n        for (const selectParts of this.selectParts) {\n            if (!selectParts.some(part => part.def.type === 'aggregate')) {\n                const aggregate = sqlPart.create({type: 'aggregate', params: ['avg']});\n                selectParts.splice(1, 0, aggregate);\n                if (!selectParts.some(part => part.def.type === 'alias')) {\n                    const alias = sqlPart.create({type: 'alias', params: [selectParts[0].part.params[0]]});\n                    selectParts.push(alias);\n                }\n            }\n        }\n\n        this.updatePersistedParts();\n    }\n\n    removeGroup(part, index) {\n        if (part.def.type === 'time') {\n            // remove aggregations\n            this.selectParts = _.map(this.selectParts, (s: any) => {\n                return _.filter(s, (part: any) => {\n                    if (part.def.type === 'aggregate' || part.def.type === 'percentile') {\n                        return false;\n                    }\n                    return true;\n                });\n            });\n        }\n\n        this.groupParts.splice(index, 1);\n        this.updatePersistedParts();\n    }\n\n    handleWherePartEvent(whereParts, part, evt, index) {\n        switch (evt.name) {\n            case 'get-param-options': {\n                switch (evt.param.name) {\n                    case 'left':\n                        return this.datasource\n                            .metricFindQuery(this.metaBuilder.buildColumnQuery())\n                            .then(this.transformToSegments({}))\n                            .catch(this.handleQueryError.bind(this));\n                    case 'right':\n                        if (['int4', 'int8', 'float4', 'float8', 'timestamp', 'timestamptz'].indexOf(part.datatype) > -1) {\n                            // don't do value lookups for numerical fields\n                            return this.$q.when([]);\n                        } else {\n                            return this.datasource\n                                .metricFindQuery(this.metaBuilder.buildValueQuery(part.params[0]))\n                                .then(\n                                    this.transformToSegments({\n                                        addTemplateVars: true,\n                                        templateQuoter: (v: string) => {\n                                            return this.queryModel.quoteLiteral(v);\n                                        },\n                                    })\n                                )\n                                .catch(this.handleQueryError.bind(this));\n                        }\n                    case 'op':\n                        return this.$q.when(this.uiSegmentSrv.newOperators(this.metaBuilder.getOperators(part.datatype)));\n                    default:\n                        return this.$q.when([]);\n                }\n            }\n            case 'part-param-changed': {\n                this.updatePersistedParts();\n                this.datasource.metricFindQuery(this.metaBuilder.buildDatatypeQuery(part.params[0])).then((d: any) => {\n                    if (d.length === 1) {\n                        part.datatype = d[0].text;\n                    }\n                });\n                this.panelCtrl.refresh();\n                break;\n            }\n            case 'action': {\n                // remove element\n                whereParts.splice(index, 1);\n                this.updatePersistedParts();\n                this.panelCtrl.refresh();\n                break;\n            }\n            case 'get-part-actions': {\n                return this.$q.when([{text: 'Remove', value: 'remove-part'}]);\n            }\n        }\n    }\n\n    getWhereOptions() {\n        const options = [];\n        if (this.queryModel.hasUnixEpochTimecolumn()) {\n            options.push(this.uiSegmentSrv.newSegment({type: 'macro', value: '$__unixEpochFilter'}));\n        } else {\n            options.push(this.uiSegmentSrv.newSegment({type: 'macro', value: '$__timeFilter'}));\n        }\n        options.push(this.uiSegmentSrv.newSegment({type: 'expression', value: 'Expression'}));\n        return this.$q.when(options);\n    }\n\n    addWhereAction(part, index) {\n        switch (this.whereAdd.type) {\n            case 'macro': {\n                const partModel = sqlPart.create({type: 'macro', name: this.whereAdd.value, params: []});\n                if (this.whereParts.length >= 1 && this.whereParts[0].def.type === 'macro') {\n                    // replace current macro\n                    this.whereParts[0] = partModel;\n                } else {\n                    this.whereParts.splice(0, 0, partModel);\n                }\n                break;\n            }\n            default: {\n                this.whereParts.push(sqlPart.create({type: 'expression', params: ['value', '=', 'value']}));\n            }\n        }\n\n        this.updatePersistedParts();\n        this.resetPlusButton(this.whereAdd);\n        this.panelCtrl.refresh();\n    }\n\n    getGroupOptions() {\n        return this.datasource\n            .metricFindQuery(this.metaBuilder.buildColumnQuery('group'))\n            .then(tags => {\n                const options = [];\n                if (!this.queryModel.hasTimeGroup()) {\n                    options.push(this.uiSegmentSrv.newSegment({type: 'time', value: 'time($__interval,none)'}));\n                }\n                for (const tag of tags) {\n                    options.push(this.uiSegmentSrv.newSegment({type: 'column', value: tag.text}));\n                }\n                return options;\n            })\n            .catch(this.handleQueryError.bind(this));\n    }\n\n    addGroupAction() {\n        switch (this.groupAdd.value) {\n            default: {\n                this.addGroup(this.groupAdd.type, this.groupAdd.value);\n            }\n        }\n\n        this.resetPlusButton(this.groupAdd);\n        this.panelCtrl.refresh();\n    }\n\n    handleQueryError(err) {\n        this.error = err.message || 'Failed to issue metric query';\n        return [];\n    }\n}\n","import _ from 'lodash';\n// API interfaces\nexport interface ResultFormat {\n  text: string;\n  value: string;\n}\n\nexport interface DataTarget {\n  target: string;\n  datapoints: any[];\n  refId: string;\n  query: any;\n}\n\nexport default class ResponseParser {\n  constructor(private $q) {}\n\n  parseProjects(results): ResultFormat[] {\n    const projects: ResultFormat[] = [];\n    if (!results || !results.data || !results.data.projects || results.data.projects.length === 0) {\n      return projects;\n    }\n    for (let prj of results.data.projects) {\n      projects.push({value: prj.id, text: prj.id});\n    }\n    return projects;\n  }\n\n  parseDatasets(results): ResultFormat[] {\n    const datasets: ResultFormat[] = [];\n    if (!results || !results.data || !results.data.datasets || results.data.datasets.length === 0) {\n      return datasets;\n    }\n    for (let ds of results.data.datasets) {\n      datasets.push({value: ds.datasetReference.datasetId, text: ds.datasetReference.datasetId});\n    }\n    return datasets;\n  }\n\n\n  parseTabels(results): ResultFormat[] {\n    const tabels: ResultFormat[] = [];\n    if (!results || !results.data || !results.data.tables || results.data.tables.length === 0) {\n      return tabels;\n    }\n    for (let tbl of results.data.tables) {\n      tabels.push({\n        value: tbl.tableReference.tableId,\n        text: tbl.tableReference.tableId\n      });\n    }\n    return tabels;\n  }\n\n  parseTabelFields(results, filter): ResultFormat[] {\n    const fields: ResultFormat[] = [];\n    if (!results || !results.data || !results.data.schema || !results.data.schema.fields || results.data.schema.fields.length === 0) {\n      return fields;\n    }\n    for (let fl of results.data.schema.fields) {\n      for (let i = 0; i < filter.length; i++) {\n        if (filter[i] === fl.type){\n          fields.push({\n            text: fl.name,\n            value: fl.type,\n          });\n        }\n      }\n    }\n    return fields;\n  }\n\n  /*parseDataQuery(results) {\n    const data = [];\n    console.log(results);\n    if (!results.data.rows) {\n      return { data: data };\n    }\n    const datapoints = [];\n    for (const row of results.data.rows) {\n      const dp = [];\n      for (const i in row.f) {\n        dp.push(Number(row.f[i].v)*1000);\n      }\n      datapoints.push(dp);\n    }\n    data.push({\n      datapoints: datapoints,\n      meta: 'meta'\n    });\n    console.log(data)\n    const last = datapoints[datapoints.length - 1][0];\n    console.log(\"last \", last)\n\n    return { data: data };\n  }*/\n\n\n  parseDataQuery(results) {\n    const data = [];\n    console.log(results);\n    if (!results.data.rows) {\n      return { data: data };\n    }\n    let timeIndex = -1;\n    let metricIndex = -1;\n    let valueIndex = -1;\n    for (let i = 0; i < results.data.schema.fields.length; i++) {\n      if (timeIndex === -1 &&  ['DATE', 'TIMESTAMP', 'DATETIME'].includes(results.data.schema.fields[i].type )) {\n        timeIndex = i;\n      }\n\n      if (metricIndex === -1 && results.data.schema.fields[i].type === 'STRING') {\n        metricIndex = i;\n      }\n      if (valueIndex === -1 && ['INT64', 'NUMERIC', 'FLOAT64', 'FLOAT', 'INT'].includes(results.data.schema.fields[i].type)) {\n        valueIndex = i;\n      }\n\n    }\n    if (timeIndex === -1) {\n      throw new Error('No datetime column found in the result. The Time Series format requires a time column.');\n    }\n    for (const row of results.data.rows) {\n      const epoch = Number(row.f[timeIndex].v) *1000;\n      const metricName = metricIndex > -1 ? row.f[metricIndex].v : results.data.schema.fields[valueIndex].name;\n      const bucket = ResponseParser.findOrCreateBucket(data, metricName);\n      bucket.datapoints.push([row.f[valueIndex].v, epoch]);\n    }\n    return { data: data };\n  }\n\n  static findOrCreateBucket(data, target): DataTarget {\n    let dataTarget = _.find(data, ['target', target]);\n    if (!dataTarget) {\n      dataTarget = { target: target, datapoints: [], refId: '', query: '' };\n      data.push(dataTarget);\n    }\n\n    return dataTarget;\n  }\n  processQueryResult(res) {\n    const data = [];\n\n    if (!res.data.results) {\n      return { data: data };\n    }\n\n    for (const key in res.data.results) {\n      const queryRes = res.data.results[key];\n\n      if (queryRes.series) {\n        for (const series of queryRes.series) {\n          data.push({\n            target: series.name,\n            datapoints: series.points,\n            refId: queryRes.refId,\n            meta: queryRes.meta,\n          });\n        }\n      }\n\n      if (queryRes.tables) {\n        for (const table of queryRes.tables) {\n          table.type = 'table';\n          table.refId = queryRes.refId;\n          table.meta = queryRes.meta;\n          data.push(table);\n        }\n      }\n    }\n\n    return { data: data };\n  }\n\n  parseMetricFindQueryResult(refId, results) {\n    if (!results || results.data.length === 0 || results.data.results[refId].meta.rowCount === 0) {\n      return [];\n    }\n\n    const columns = results.data.results[refId].tables[0].columns;\n    const rows = results.data.results[refId].tables[0].rows;\n    const textColIndex = this.findColIndex(columns, '__text');\n    const valueColIndex = this.findColIndex(columns, '__value');\n\n    if (columns.length === 2 && textColIndex !== -1 && valueColIndex !== -1) {\n      return this.transformToKeyValueList(rows, textColIndex, valueColIndex);\n    }\n\n    return this.transformToSimpleList(rows);\n  }\n\n  transformToKeyValueList(rows, textColIndex, valueColIndex) {\n    const res = [];\n\n    for (let i = 0; i < rows.length; i++) {\n      if (!this.containsKey(res, rows[i][textColIndex])) {\n        res.push({\n          text: rows[i][textColIndex],\n          value: rows[i][valueColIndex],\n        });\n      }\n    }\n\n    return res;\n  }\n\n  transformToSimpleList(rows) {\n    const res = [];\n\n    for (let i = 0; i < rows.length; i++) {\n      for (let j = 0; j < rows[i].length; j++) {\n        const value = rows[i][j];\n        if (res.indexOf(value) === -1) {\n          res.push(value);\n        }\n      }\n    }\n\n    return _.map(res, value => {\n      return { text: value };\n    });\n  }\n\n  findColIndex(columns, colName) {\n    for (let i = 0; i < columns.length; i++) {\n      if (columns[i].text === colName) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  containsKey(res, key) {\n    for (let i = 0; i < res.length; i++) {\n      if (res[i].text === key) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  transformAnnotationResponse(options, data) {\n    const table = data.data.results[options.annotation.name].tables[0];\n\n    let timeColumnIndex = -1;\n    const titleColumnIndex = -1;\n    let textColumnIndex = -1;\n    let tagsColumnIndex = -1;\n\n    for (let i = 0; i < table.columns.length; i++) {\n      if (table.columns[i].text === 'time') {\n        timeColumnIndex = i;\n      } else if (table.columns[i].text === 'text') {\n        textColumnIndex = i;\n      } else if (table.columns[i].text === 'tags') {\n        tagsColumnIndex = i;\n      }\n    }\n\n    if (timeColumnIndex === -1) {\n      return this.$q.reject({\n        message: 'Missing mandatory time column in annotation query.',\n      });\n    }\n\n    const list = [];\n    for (let i = 0; i < table.rows.length; i++) {\n      const row = table.rows[i];\n      list.push({\n        annotation: options.annotation,\n        time: Math.floor(row[timeColumnIndex]),\n        title: row[titleColumnIndex],\n        text: row[textColumnIndex],\n        tags: row[tagsColumnIndex] ? row[tagsColumnIndex].trim().split(/\\s*,\\s*/) : [],\n      });\n    }\n\n    return list;\n  }\n}\n","import _ from 'lodash';\nexport class SqlPartDef {\n  type: string;\n  style: string;\n  label: string;\n  params: any[];\n  defaultParams: any[];\n  wrapOpen: string;\n  wrapClose: string;\n  separator: string;\n\n  constructor(options: any) {\n    this.type = options.type;\n    if (options.label) {\n      this.label = options.label;\n    } else {\n      this.label = this.type[0].toUpperCase() + this.type.substring(1) + ':';\n    }\n    this.style = options.style;\n    if (this.style === 'function') {\n      this.wrapOpen = '(';\n      this.wrapClose = ')';\n      this.separator = ', ';\n    } else {\n      this.wrapOpen = ' ';\n      this.wrapClose = ' ';\n      this.separator = ' ';\n    }\n    this.params = options.params;\n    this.defaultParams = options.defaultParams;\n  }\n}\n\nexport class SqlPart {\n  part: any;\n  def: SqlPartDef;\n  params: any[];\n  label: string;\n  name: string;\n  datatype: string;\n\n  constructor(part: any, def: any) {\n    this.part = part;\n    this.def = def;\n    if (!this.def) {\n      throw { message: 'Could not find sql part ' + part.type };\n    }\n\n    this.datatype = part.datatype;\n\n    if (part.name) {\n      this.name = part.name;\n      this.label = def.label + ' ' + part.name;\n    } else {\n      this.name = '';\n      this.label = def.label;\n    }\n\n    part.params = part.params || _.clone(this.def.defaultParams);\n    this.params = part.params;\n  }\n\n  updateParam(strValue, index) {\n    // handle optional parameters\n    if (strValue === '' && this.def.params[index].optional) {\n      this.params.splice(index, 1);\n    } else {\n      this.params[index] = strValue;\n    }\n\n    this.part.params = this.params;\n  }\n}\n\nconst index = [];\n\nfunction createPart(part): any {\n  const def = index[part.type];\n  if (!def) {\n    return null;\n  }\n\n  return new SqlPart(part, def);\n}\n\nfunction register(options: any) {\n  index[options.type] = new SqlPartDef(options);\n}\n\nregister({\n  type: 'column',\n  style: 'label',\n  params: [{ type: 'column', dynamicLookup: true }],\n  defaultParams: ['value'],\n});\n\nregister({\n  type: 'expression',\n  style: 'expression',\n  label: 'Expr:',\n  params: [\n    { name: 'left', type: 'string', dynamicLookup: true },\n    { name: 'op', type: 'string', dynamicLookup: true },\n    { name: 'right', type: 'string', dynamicLookup: true },\n  ],\n  defaultParams: ['value', '=', 'value'],\n});\n\nregister({\n  type: 'macro',\n  style: 'label',\n  label: 'Macro:',\n  params: [],\n  defaultParams: [],\n});\n\nregister({\n  type: 'aggregate',\n  style: 'label',\n  params: [\n    {\n      name: 'name',\n      type: 'string',\n      options: ['avg', 'count', 'min', 'max', 'sum', 'stddev', 'variance'],\n    },\n  ],\n  defaultParams: ['avg'],\n});\n\nregister({\n  type: 'percentile',\n  label: 'Aggregate:',\n  style: 'label',\n  params: [\n    {\n      name: 'name',\n      type: 'string',\n      options: ['percentile_cont', 'percentile_disc'],\n    },\n    {\n      name: 'fraction',\n      type: 'number',\n      options: ['0.5', '0.75', '0.9', '0.95', '0.99'],\n    },\n  ],\n  defaultParams: ['percentile_cont', '0.95'],\n});\n\nregister({\n  type: 'alias',\n  style: 'label',\n  params: [{ name: 'name', type: 'string', quote: 'double' }],\n  defaultParams: ['alias'],\n});\n\nregister({\n  type: 'time',\n  style: 'function',\n  label: 'time',\n  params: [\n    {\n      name: 'interval',\n      type: 'interval',\n      options: ['$__interval', '1s', '10s', '1m', '5m', '10m', '15m', '1h'],\n    },\n    {\n      name: 'fill',\n      type: 'string',\n      options: ['none', 'NULL', 'previous', '0'],\n    },\n  ],\n  defaultParams: ['$__interval', 'none'],\n});\n\nregister({\n  type: 'window',\n  style: 'label',\n  params: [\n    {\n      name: 'function',\n      type: 'string',\n      options: ['delta', 'increase', 'rate', 'sum'],\n    },\n  ],\n  defaultParams: ['increase'],\n});\n\nregister({\n  type: 'moving_window',\n  style: 'label',\n  label: 'Moving Window:',\n  params: [\n    {\n      name: 'function',\n      type: 'string',\n      options: ['avg'],\n    },\n    {\n      name: 'window_size',\n      type: 'number',\n      options: ['3', '5', '7', '10', '20'],\n    },\n  ],\n  defaultParams: ['avg', '5'],\n});\n\nexport default {\n  create: createPart,\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE_grafana_app_core_app_events__;","module.exports = __WEBPACK_EXTERNAL_MODULE_grafana_app_plugins_sdk__;","module.exports = __WEBPACK_EXTERNAL_MODULE_lodash__;"],"sourceRoot":""}